version: 2.1

commands:
  install_dependencies:
    description: "Install development dependencies."
    steps:
      - run: composer install

  mkdir_artifacts:
    description: "Make Artifacts directory"
    steps:
      - run:
          command: |
            [ ! -d "/tmp/artifacts" ] && mkdir /tmp/artifacts &>/dev/null

  set_verision_variable:
    description: "Set the VERSION environment variable"
    steps:
      - run:
          command: |
            echo "export VERSION=$(grep 'Version:' /tmp/src/plugin.php | awk -F: '{print $2}' | sed 's/^\s//')" >> ${BASH_ENV}

  show_pwd_info:
    description: "Show information about the current directory"
    steps:
      - run: pwd
      - run: ls -lash

  svn_setup:
    description: "Setup SVN"
    steps:
      - run: echo "export SLUG=$(grep '@package' /tmp/src/plugin.php | awk -F ' ' '{print $3}' | sed 's/^\s//')" >> ${BASH_ENV}
      - run: svn co https://plugins.svn.wordpress.org/${SLUG} --depth=empty .
      - run: svn up trunk
      - run: svn up tags --depth=empty
      - run: find ./trunk -not -path "./trunk" -delete
      - run: cp -r /tmp/src/. ./trunk
      - run: svn propset svn:ignore -F ./trunk/.svnignore ./trunk

  svn_add_changes:
    description: "Add changes to SVN"
    steps:
      - run:
          command: if [[ ! -z $(svn st | grep ^\!) ]]; then svn st | grep ^! | awk '{print " --force "$2}' | xargs -0r svn rm; fi
      - run: svn add --force .

  svn_create_tag:
    description: "Create a SVN tag"
    steps:
      - set_verision_variable
      - run: svn cp trunk tags/${VERSION}

  svn_commit:
    description: "Commit changes to SVN"
    steps:
      - set_verision_variable
      - run: svn ci -m "Tagging ${VERSION} from Github" --no-auth-cache --non-interactive --username "${SVN_USERNAME}" --password "${SVN_PASSWORD}"

executors:
  base:
    docker:
      - image: cimg/base:current
    working_directory: /tmp
  php_node:
    docker:
      - image: cimg/php:7.3-node
    working_directory: /tmp/src

jobs:
  test-svn:
    docker:
      - image: cimg/base:current
    steps:
      - checkout:
          path: /tmp/src
      - run:
          name: Testing SVN
          command: |
            if [ ! $SVN_USERNAME ]
              then
              echo "There is no SVN_USERNAME environment variable. Please add a CircleCI context that has that variable: https://github.com/studiopress/wp-svn-orb/blob/develop/src/examples/example.yml#L26"
              exit 1
            fi
            if [ ! $SVN_PASSWORD ]
              then
              echo "There is no SVN_PASSWORD environment variable. Please add a CircleCI context that has that variable: https://github.com/studiopress/wp-svn-orb/blob/develop/src/examples/example.yml#L26"
              exit 1
            fi

            CHECKOUT_PATH=/tmp/src
            sudo apt-get update
            sudo apt-get install subversion

            SLUG=$CIRCLE_PROJECT_REPONAME
            if [ ! $SLUG ]
              then
              echo "Didn't find the plugin slug from the repo name"
              exit 1
            fi

            VERSION=$(grep -i 'Version:' $CHECKOUT_PATH/*.php | awk -F: '{print $(NF)}' | sed 's/^\s//')
            if [ ! $VERSION ] || [ 'Version' = $VERSION ]
              then
              echo "Didn't find a version of the plugin"
              exit 1
            fi

            TESTED_UP_TO_VERSION=$(grep -i 'tested up to:' $CHECKOUT_PATH/readme.txt | awk -F: '{print $2}' | sed 's/^\s//')
            if [ ! $TESTED_UP_TO_VERSION ]
              then
              echo "Didn't find a 'Tested up to' version, so can't bump it"
              exit 1
            fi

            svn co https://plugins.svn.wordpress.org/${SLUG} --depth=empty .
            svn up trunk
            svn up tags --depth=empty
            svn up tags/${VERSION}
            echo "The tested up to version is: $TESTED_UP_TO_VERSION"
            sed -i "s/tested up to: .*/Tested up to: ${TESTED_UP_TO_VERSION}/i" trunk/readme.txt tags/${VERSION}/readme.txt
            echo "Here is the svn stat about to be checked in:"
            svn stat
            echo "And here is the diff:"
            svn diff

workflows:
  test-deploy:
    jobs:
      - test-svn
